#!/usr/bin/env python3
"""
–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ–≤ –¥–ª—è —Å–∏—Å—Ç–µ–º–∏
–í–∏–∫–æ–Ω—É—î—Ç—å—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ—î–º
"""

import os
import sys
from dotenv import load_dotenv

sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
load_dotenv()

from app import app, db, User
from werkzeug.security import generate_password_hash

def create_admins():
    """–°—Ç–≤–æ—Ä—é—î –∞–¥–º—ñ–Ω—ñ–≤ —è–∫—â–æ —ó—Ö –Ω–µ–º–∞—î"""
    with app.app_context():
        try:
            print("=" * 60)
            print("üë• –°–¢–í–û–†–ï–ù–ù–Ø –ê–î–ú–Ü–ù–Ü–í")
            print("=" * 60)
            
            # –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ —ñ—Å–Ω—É—é—Ç—å –∞–¥–º—ñ–Ω–∏
            existing_admins = User.query.filter_by(role='admin').all()
            
            if existing_admins:
                print(f"\n‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {len(existing_admins)} –∞–¥–º—ñ–Ω—ñ–≤:")
                for admin in existing_admins:
                    print(f"   - {admin.username} ({admin.email})")
                print("\n‚ùì –°—Ç–≤–æ—Ä–∏—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –∞–¥–º—ñ–Ω—ñ–≤? (y/N): ", end='')
                response = input().lower()
                if response != 'y':
                    print("‚ùå –°–∫–∞—Å–æ–≤–∞–Ω–æ")
                    return
            
            # –ê–¥–º—ñ–Ω–∏ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è
            admins_to_create = [
                {
                    'username': 'anton_admin',
                    'email': 'anton@pro-part.online',
                    'password': 'sfajerfe234ewqf#'
                },
                {
                    'username': 'alex_admin',
                    'email': 'alex@pro-part.online',
                    'password': 'dgerifwef@fmso4'
                }
            ]
            
            print("\nüìù –°—Ç–≤–æ—Ä—é—é –∞–¥–º—ñ–Ω—ñ–≤...")
            created = 0
            
            for admin_data in admins_to_create:
                # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≤–∂–µ —ñ—Å–Ω—É—î
                existing = User.query.filter(
                    (User.username == admin_data['username']) | 
                    (User.email == admin_data['email'])
                ).first()
                
                if existing:
                    print(f"   ‚ö†Ô∏è  {admin_data['username']} –≤–∂–µ —ñ—Å–Ω—É—î (–ø—Ä–æ–ø—É—â–µ–Ω–æ)")
                    continue
                
                # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–º—ñ–Ω–∞
                admin = User(
                    username=admin_data['username'],
                    email=admin_data['email'],
                    password_hash=generate_password_hash(admin_data['password']),
                    role='admin',
                    is_verified=True
                )
                
                db.session.add(admin)
                print(f"   ‚úÖ {admin_data['username']} —Å—Ç–≤–æ—Ä–µ–Ω–æ")
                created += 1
            
            db.session.commit()
            
            print("\n" + "=" * 60)
            print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ {created} –Ω–æ–≤–∏—Ö –∞–¥–º—ñ–Ω—ñ–≤")
            print("=" * 60)
            
            # –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ—Ö –∞–¥–º—ñ–Ω—ñ–≤
            all_admins = User.query.filter_by(role='admin').all()
            print(f"\nüìã –í–°–Ü –ê–î–ú–Ü–ù–ò –í –°–ò–°–¢–ï–ú–Ü ({len(all_admins)}):")
            for admin in all_admins:
                print(f"   üë§ {admin.username:20} | {admin.email:35} | ID: {admin.id}")
            
            print("\n" + "=" * 60)
            print("üîê –û–ë–õ–Ü–ö–û–í–Ü –ó–ê–ü–ò–°–ò:")
            print("=" * 60)
            print("1. anton_admin / sfajerfe234ewqf#")
            print("2. alex_admin / dgerifwef@fmso4")
            print("=" * 60)
            
        except Exception as e:
            db.session.rollback()
            print(f"\n‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
            import traceback
            traceback.print_exc()

if __name__ == '__main__':
    create_admins()

