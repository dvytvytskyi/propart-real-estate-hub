#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫—É —Ç–µ—Å—Ç—ñ–≤ ProPart Real Estate Hub
"""
import os
import sys
import subprocess
import argparse

def run_tests(test_type=None, verbose=False, coverage=False):
    """–ó–∞–ø—É—Å–∫–∞—î —Ç–µ—Å—Ç–∏"""
    
    # –ë–∞–∑–æ–≤—ñ –∫–æ–º–∞–Ω–¥–∏ pytest
    cmd = ['python', '-m', 'pytest']
    
    if verbose:
        cmd.append('-v')
    
    if coverage:
        cmd.extend([
            '--cov=app',
            '--cov-report=term-missing',
            '--cov-report=html:htmlcov'
        ])
    
    # –î–æ–¥–∞—î–º–æ –º–∞—Ä–∫–µ—Ä–∏ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–∏–ø—É —Ç–µ—Å—Ç—ñ–≤
    if test_type == 'models':
        cmd.extend(['-m', 'database', 'tests/test_models.py', 'tests/test_migrations.py'])
    elif test_type == 'unit':
        cmd.extend(['-m', 'unit'])
    elif test_type == 'integration':
        cmd.extend(['-m', 'integration'])
    elif test_type == 'auth':
        cmd.extend(['-m', 'auth'])
    elif test_type == 'hubspot':
        cmd.extend(['-m', 'hubspot'])
    else:
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ –≤—Å—ñ —Ç–µ—Å—Ç–∏
        cmd.append('tests/')
    
    print(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—ñ–≤: {' '.join(cmd)}")
    print("=" * 60)
    
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–µ—Å—Ç–∏
    result = subprocess.run(cmd, cwd=os.path.dirname(os.path.abspath(__file__)))
    
    if result.returncode == 0:
        print("\n‚úÖ –í—Å—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π—à–ª–∏ —É—Å–ø—ñ—à–Ω–æ!")
    else:
        print("\n‚ùå –î–µ—è–∫—ñ —Ç–µ—Å—Ç–∏ –Ω–µ –ø—Ä–æ–π—à–ª–∏!")
    
    return result.returncode

def install_test_requirements():
    """–í—Å—Ç–∞–Ω–æ–≤–ª—é—î –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è"""
    print("üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è...")
    
    try:
        subprocess.run([
            sys.executable, '-m', 'pip', 'install', '-r', 'requirements-test.txt'
        ], check=True, cwd=os.path.dirname(os.path.abspath(__file__)))
        print("‚úÖ –ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π: {e}")
        return False

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    parser = argparse.ArgumentParser(description='–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—ñ–≤ ProPart Real Estate Hub')
    parser.add_argument('--type', choices=['models', 'unit', 'integration', 'auth', 'hubspot'], 
                       help='–¢–∏–ø —Ç–µ—Å—Ç—ñ–≤ –¥–ª—è –∑–∞–ø—É—Å–∫—É')
    parser.add_argument('--install', action='store_true', 
                       help='–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è')
    parser.add_argument('--verbose', '-v', action='store_true', 
                       help='–î–µ—Ç–∞–ª—å–Ω–∏–π –≤–∏–≤—ñ–¥')
    parser.add_argument('--coverage', action='store_true', 
                       help='–ó–≤—ñ—Ç –ø—Ä–æ –ø–æ–∫—Ä–∏—Ç—Ç—è –∫–æ–¥—É')
    
    args = parser.parse_args()
    
    print("üè† ProPart Real Estate Hub - –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è")
    print("=" * 50)
    
    if args.install:
        if not install_test_requirements():
            return 1
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
    try:
        import pytest
    except ImportError:
        print("‚ùå pytest –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π. –ó–∞–ø—É—Å—Ç—ñ—Ç—å –∑ --install")
        return 1
    
    return run_tests(
        test_type=args.type,
        verbose=args.verbose,
        coverage=args.coverage
    )

if __name__ == '__main__':
    sys.exit(main())
