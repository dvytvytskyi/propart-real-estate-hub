#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –ª—ñ–¥—ñ–≤ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
–í–ò–ö–û–†–ò–°–¢–û–í–£–í–ê–¢–ò –ó –û–ë–ï–†–ï–ñ–ù–Ü–°–¢–Æ! –¶—è –¥—ñ—è –Ω–µ–∑–≤–æ—Ä–æ—Ç–Ω–∞!
"""

import os
import sys
from dotenv import load_dotenv

# –î–æ–¥–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–æ —à–ª—è—Ö—É
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

load_dotenv()

from app import app, db, Lead

def delete_all_leads():
    """–í–∏–¥–∞–ª—è—î –≤—Å—ñ –ª—ñ–¥–∏ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"""
    with app.app_context():
        try:
            # –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –ø–µ—Ä–µ–¥ –≤–∏–¥–∞–ª–µ–Ω–Ω—è–º
            total_leads = Lead.query.count()
            
            if total_leads == 0:
                print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –≤–∂–µ –ø–æ—Ä–æ–∂–Ω—è. –õ—ñ–¥—ñ–≤ –Ω–µ–º–∞—î.")
                return
            
            print(f"‚ö†Ô∏è  –£–í–ê–ì–ê! –ë—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ {total_leads} –ª—ñ–¥—ñ–≤!")
            print("=" * 60)
            
            # –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–µ—Ä—à—ñ 10 –ª—ñ–¥—ñ–≤ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
            sample_leads = Lead.query.limit(10).all()
            print("\nüìã –ü—Ä–∏–∫–ª–∞–¥ –ª—ñ–¥—ñ–≤ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è:")
            for lead in sample_leads:
                print(f"  - {lead.deal_name or '–ë–µ–∑ –Ω–∞–∑–≤–∏'} (ID: {lead.id}, –ö–ª—ñ—î–Ω—Ç: {lead.client_name or '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'})")
            
            if total_leads > 10:
                print(f"  ... —Ç–∞ —â–µ {total_leads - 10} –ª—ñ–¥—ñ–≤")
            
            print("\n" + "=" * 60)
            confirmation = input("\n‚ùì –í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ? –í–≤–µ–¥—ñ—Ç—å '–¢–ê–ö' –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è: ")
            
            if confirmation.upper() != '–¢–ê–ö':
                print("‚ùå –û–ø–µ—Ä–∞—Ü—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ.")
                return
            
            print("\nüóëÔ∏è  –í–∏–¥–∞–ª–µ–Ω–Ω—è –ª—ñ–¥—ñ–≤...")
            
            # –í–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –ª—ñ–¥—ñ–≤
            deleted_count = Lead.query.delete()
            db.session.commit()
            
            print(f"\n‚úÖ –£—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ {deleted_count} –ª—ñ–¥—ñ–≤!")
            print("üìä –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö —Ç–µ–ø–µ—Ä –ø–æ—Ä–æ–∂–Ω—è.")
            
            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞
            remaining = Lead.query.count()
            if remaining == 0:
                print("‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞: –ª—ñ–¥—ñ–≤ –Ω–µ –∑–∞–ª–∏—à–∏–ª–æ—Å—è.")
            else:
                print(f"‚ö†Ô∏è  –£–≤–∞–≥–∞: –∑–∞–ª–∏—à–∏–ª–æ—Å—è {remaining} –ª—ñ–¥—ñ–≤!")
                
        except Exception as e:
            db.session.rollback()
            print(f"\n‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ: {e}")
            import traceback
            traceback.print_exc()

if __name__ == '__main__':
    print("\n" + "=" * 60)
    print("üóëÔ∏è  –í–ò–î–ê–õ–ï–ù–ù–Ø –í–°–Ü–• –õ–Ü–î–Ü–í")
    print("=" * 60)
    delete_all_leads()
    print("\n" + "=" * 60)
    print("‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
    print("=" * 60 + "\n")

